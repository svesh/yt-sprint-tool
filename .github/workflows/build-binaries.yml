name: Build Binaries

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:

permissions:
  contents: write

jobs:
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyright isort pymarkdownlnt yamllint

      - name: pylint
        run: |
          pylint **/*.py

      - name: pyright
        run: |
          pyright

      - name: isort check
        run: |
          python -m isort --check --diff .

      - name: markdown lint
        run: |
          pymarkdownlnt --config .pymarkdownlnt.json scan --recurse --exclude=./.venv .

      - name: yamllint
        run: |
          yamllint -c .yamllint.yaml .

      - name: pytest with coverage
        run: |
          pytest -v --cov=calendar_parser --cov-fail-under=80

      - name: helm lint (conditional)
        shell: bash
        run: |
          if command -v helm >/dev/null 2>&1 && [ -d helm ]; then
            helm lint helm/
          else
            echo "helm or helm/ not present, skipping helm lint"
          fi

  linux-amd64:
    name: Linux amd64
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build export-stage (amd64)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -f Dockerfile.debian \
            --target export-stage \
            --output type=local,dest=out \
            .
      - name: Prepare artifacts
        run: |
          ls -la out
          mv out/make-sprint make-sprint-linux-amd64
          mv out/default-sprint default-sprint-linux-amd64
      - uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-amd64
          path: |
            make-sprint-linux-amd64
            default-sprint-linux-amd64

  linux-arm64:
    name: Linux arm64
    # Build arm64 binary on an amd64 runner via buildx to avoid slow arm runners
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Build export-stage (arm64)
        run: |
          docker buildx build \
            --platform linux/arm64 \
            -f Dockerfile.debian \
            --target export-stage \
            --output type=local,dest=out \
            .
      - name: Prepare artifacts
        run: |
          ls -la out
          mv out/make-sprint make-sprint-linux-arm64
          mv out/default-sprint default-sprint-linux-arm64
      - uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-arm64
          path: |
            make-sprint-linux-arm64
            default-sprint-linux-arm64

  windows-amd64:
    name: Windows amd64 (via Wine)
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Build export-stage (windows amd64)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -f Dockerfile.windows \
            --target export-stage \
            --output type=local,dest=out \
            .
      - name: Prepare artifacts
        run: |
          ls -la out
          mv out/make-sprint.exe make-sprint-windows-amd64.exe
          mv out/default-sprint.exe default-sprint-windows-amd64.exe
      - uses: actions/upload-artifact@v4
        with:
          name: binaries-windows-amd64
          path: |
            make-sprint-windows-amd64.exe
            default-sprint-windows-amd64.exe

  macos-arm64:
    name: macOS arm64
    runs-on: macos-14
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Create venv and install deps
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          scripts/build-macos.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-macos-arm64
          path: |
            dist/make-sprint-macos-arm64
            dist/default-sprint-macos-arm64

  macos-x86_64:
    name: macOS x86_64
    runs-on: macos-13
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Create venv and install deps
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          scripts/build-macos.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-macos-x86_64
          path: |
            dist/make-sprint-macos-x86_64
            dist/default-sprint-macos-x86_64

  release:
    name: Release (attach artifacts)
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [linux-amd64, linux-arm64, windows-amd64, macos-arm64, macos-x86_64]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          merge-multiple: true

      - name: List artifacts
        run: |
          ls -la release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/make-sprint-linux-amd64
            release/default-sprint-linux-amd64
            release/make-sprint-linux-arm64
            release/default-sprint-linux-arm64
            release/make-sprint-windows-amd64.exe
            release/default-sprint-windows-amd64.exe
            release/make-sprint-macos-arm64
            release/default-sprint-macos-arm64
            release/make-sprint-macos-x86_64
            release/default-sprint-macos-x86_64
          draft: false
          prerelease: false
