# Multi-stage build based on Debian
# YT Sprint Tool - YouTrack Sprint automation utilities
# Author: Sergei Sveshnikov (svesh87@gmail.com) 
# Repository: https://github.com/svesh/yt-sprint-tool/
FROM python:3.12-slim AS builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    patchelf \
    && rm -rf /var/lib/apt/lists/*

# Create working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --upgrade pip \
    && pip install -r requirements.txt \
    && pip install staticx==0.14.1

# Copy source code
COPY lib_date_utils.py .
COPY lib_yt_api.py .
COPY version.py .
COPY make_sprint.py .
COPY default_sprint.py .

# Build Linux binaries
RUN pyinstaller --onefile --name make-sprint \
        --add-data "lib_date_utils.py:." \
        --add-data "lib_yt_api.py:." \
        --add-data "version.py:." \
        make_sprint.py \
    && pyinstaller --onefile --name default-sprint \
        --add-data "lib_date_utils.py:." \
        --add-data "lib_yt_api.py:." \
        --add-data "version.py:." \
        default_sprint.py

# Create statically linked binaries through staticx
RUN staticx dist/make-sprint dist/make-sprint-static \
    && staticx dist/default-sprint dist/default-sprint-static \
    && mv dist/make-sprint-static dist/make-sprint \
    && mv dist/default-sprint-static dist/default-sprint

# Final stage: clean Debian slim with binaries
FROM debian:12-slim

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libc6 \
    libgcc-s1 \
    libstdc++6 \
    && rm -rf /var/lib/apt/lists/*

# Create user
RUN useradd -m -u 1000 appuser

# Copy only Linux binaries from builder stage
COPY --from=builder /app/dist/make-sprint /usr/local/bin/
COPY --from=builder /app/dist/default-sprint /usr/local/bin/

# Set permissions
RUN chmod +x /usr/local/bin/make-sprint /usr/local/bin/default-sprint

# Switch to user
USER appuser

# Working directory
WORKDIR /home/appuser

# Entry point (by default show help)
CMD ["make-sprint", "--help"]
